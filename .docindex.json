{
  "version": "1.0",
  "project": {
    "name": "fal-mcp",
    "description": "Model Context Protocol server for fal.ai - AI-powered image, video, and audio generation",
    "type": "mcp-server",
    "language": "typescript",
    "framework": "xmcp"
  },
  "navigation": {
    "entryPoints": [
      {
        "path": "/",
        "description": "Project root - setup and configuration",
        "key_files": ["README.md", "CLAUDE.md", "package.json"]
      },
      {
        "path": "/src",
        "description": "Source code root",
        "key_files": ["index.ts", "middleware.ts", "CLAUDE.md"]
      },
      {
        "path": "/src/tools",
        "description": "All MCP tool implementations",
        "key_files": ["CLAUDE.md", "textToImage.ts", "imageToImage.ts"]
      },
      {
        "path": "/src/lib",
        "description": "Core utilities and abstractions",
        "key_files": ["fal-client.ts", "utils/tool-base.ts", "CLAUDE.md"]
      },
      {
        "path": "/docs",
        "description": "Project documentation",
        "key_files": ["README.md", "ARCHITECTURE.md", "guides/discovery-philosophy.md"]
      }
    ],
    "categories": {
      "tools": {
        "image_generation": [
          "textToImage",
          "textToImageStyled",
          "textToImageWithPreset"
        ],
        "image_processing": [
          "imageToImage",
          "backgroundRemoval",
          "batchBackgroundRemoval",
          "batchProcessImages",
          "objectRemoval",
          "upscaleImage"
        ],
        "video": [
          "textToVideo",
          "imageToVideo"
        ],
        "audio": [
          "textToSpeech",
          "speechToText",
          "textToAudio",
          "audioToAudio"
        ],
        "discovery": [
          "discoverModelsDynamic",
          "listModelsDynamic",
          "recommendModel",
          "modelDocs",
          "courseModels"
        ],
        "utilities": [
          "uploadFile",
          "downloadFile",
          "saveImage",
          "workflowChain",
          "enhancePrompt",
          "getSystemInstructions",
          "imageToJson",
          "jsonTools"
        ]
      }
    }
  },
  "key_concepts": {
    "discovery_pattern": {
      "description": "Tools accept any parameters and learn from API responses",
      "references": [
        "/docs/guides/discovery-philosophy.md",
        "/docs/ARCHITECTURE.md"
      ]
    },
    "tool_base": {
      "description": "Base class providing common functionality for all tools",
      "references": [
        "/src/lib/utils/tool-base.ts",
        "/src/lib/CLAUDE.md"
      ]
    },
    "mock_mode": {
      "description": "Testing without API calls using MOCK_MODE=true",
      "references": [
        "/src/lib/utils/test/mock-fixtures.ts",
        "/src/__tests__/CLAUDE.md"
      ]
    }
  },
  "workflows": {
    "image_generation": {
      "description": "Generate and process images",
      "steps": [
        { "tool": "textToImage", "purpose": "Generate base image" },
        { "tool": "imageToImage", "purpose": "Apply transformations" },
        { "tool": "upscaleImage", "purpose": "Enhance resolution" }
      ]
    },
    "video_creation": {
      "description": "Create videos from text or images",
      "steps": [
        { "tool": "textToVideo", "purpose": "Direct video generation" },
        { "tool": "imageToVideo", "purpose": "Animate static images" }
      ]
    },
    "batch_processing": {
      "description": "Process multiple files",
      "steps": [
        { "tool": "batchBackgroundRemoval", "purpose": "Remove backgrounds in bulk" },
        { "tool": "batchProcessImages", "purpose": "Apply same transformation to many images" }
      ]
    }
  },
  "development": {
    "commands": {
      "dev": "pnpm dev",
      "test": "pnpm test",
      "build": "pnpm build",
      "lint": "pnpm check"
    },
    "testing": {
      "framework": "vitest",
      "coverage": "18%",
      "mock_mode": true
    },
    "patterns": {
      "tool_creation": "/src/tools/CLAUDE.md#tool-development-pattern",
      "error_handling": "/src/lib/utils/errors.ts",
      "test_writing": "/src/__tests__/CLAUDE.md#writing-tests"
    }
  },
  "search_hints": {
    "find_tool": "Look in /src/tools/ directory",
    "find_test": "Look in /src/__tests__/tools/ directory",
    "find_docs": "Check /docs/guides/ for detailed guides",
    "find_mock": "Check /src/lib/utils/test/mock-fixtures.ts"
  },
  "metadata": {
    "generated": "2024-01-25",
    "ai_optimized": true,
    "index_version": "1.0"
  }
}